kind: ConfigMap
apiVersion: v1
metadata:
  name: api-gateway
  namespace: petclinic
data:
  api-gateway.yaml: |-
    server:
      port: 8080
      shutdown: graceful
      compression:
        enabled: true
        mime-types: application/json,text/css,application/javascript
        min-response-size: 2048

    # Internationalization
    spring.messages.basename: messages/messages

    # COMMON APPLICATION PROPERTIE

    # embedded database init, supports mysql too trough the 'mysql' spring profile
    spring:
      datasource:
        schema: classpath*:db/hsqldb/schema.sql
        data: classpath*:db/hsqldb/data.sql
      sleuth:
        sampler:
          probability: 1.0
      cloud:
        config:
          # Allow the microservices to override the remote properties with their own System properties or config file
          allow-override: true
          # Override configuration with any local property source
          override-none: true
        loadbalancer:
          enabled: false
          ribbon:
            enabled: false
        gateway:
          routes:
            - id: vets-service
              uri: http://vets-service.petclinic.mesh
              predicates:
                - Path=/api/vet/**
              filters:
                - StripPrefix=2

      jpa:
        open-in-view: false
        hibernate:
          ddl-auto: none
      jmx:
        enabled: true

    # Spring Boot 1.5 makes actuator secure by default
    management.security.enabled: false
    # Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
    management.endpoints.web.exposure.include: "*"
    management.endpoint.gateway.enabled: true

    # Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
    # Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
    spring.cloud.refresh.refreshable: false


    # Logging
    logging.level.org.springframework: INFO

    # Metrics
    management:
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
      endpoints:
        web:
          exposure:
            include: '*'
      metrics:
        export:
          prometheus:
            enabled: true

    # Chaos Engineering
    ---
    spring:
      config:
        activate:
          on-profile: chaos-monkey      
    management.endpoint.chaosmonkey.enabled: true
    chaos:
      monkey:
        enabled: true
        watcher:
          component: false
          controller: false
          repository: false
          rest-controller: false
          service: false

    ---
    spring:
      config:
        activate:
          on-profile: mysql
      datasource:
        schema: classpath*:db/mysql/schema.sql
        data: classpath*:db/mysql/data.sql
        url: jdbc:mysql://${MYSQL_SERVER_FULL_NAME}:3306/${MYSQL_DATABASE_NAME}?useSSL=false
        username: ${MYSQL_SERVER_ADMIN_LOGIN_NAME}
        password: ${MYSQL_SERVER_ADMIN_PASSWORD}
        initialization-mode: ALWAYS

    ---
    spring:
      profiles: key-vault

    MYSQL_SERVER_FULL_NAME: ${MYSQL-SERVER-FULL-NAME}
    MYSQL_DATABASE_NAME: ${MYSQL-DATABASE-NAME}
    MYSQL_SERVER_ADMIN_LOGIN_NAME: ${MYSQL-SERVER-ADMIN-LOGIN-NAME}
    MYSQL_SERVER_ADMIN_PASSWORD: ${MYSQL-SERVER-ADMIN-PASSWORD}

    azure:
      keyvault:
        enabled: true
        uri: ${AZURE_KEY_VAULT_URI}
